/* ShadowMap Shader */

/*----------------------------------------------------------------------------------------------------
	Define
----------------------------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------------------
	Buffer
----------------------------------------------------------------------------------------------------*/

// Cbuffer
cbuffer cbViewProjection : register( b0 )
{
	matrix g_mView;
	matrix g_mProjection;
	matrix g_mWorld;
};

/*----------------------------------------------------------------------------------------------------
	Struct
----------------------------------------------------------------------------------------------------*/

struct VS_INPUT
{
	float3 pos : POSITION;
	float2 tex : TEXCOORD0;
	float3 nrm : NORMAL0;
	float3 tan : TANGENT0;
	float4 col : COLOR0;
};

struct PS_INPUT
{
	float4 pos : SV_POSITION;
	float2 tex : TEXCOORD0;
	float3 nrm : NORMAL0;
	float3 tan : TANGENT0;
	float4 col : COLOR1;
};

/*----------------------------------------------------------------------------------------------------
	Front Function
----------------------------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------------------
	Vertex Shader
----------------------------------------------------------------------------------------------------*/

PS_INPUT VS( VS_INPUT input )
{
	PS_INPUT output = (PS_INPUT)0;
	output.pos = mul( float4( input.pos, 1.0f ), g_mWorld );
	output.pos = mul( output.pos, g_mView );
	output.pos = mul( output.pos, g_mProjection );
	return output;
}

/*----------------------------------------------------------------------------------------------------
	Pixel Shader Function
----------------------------------------------------------------------------------------------------*/

float4 PS( PS_INPUT input) : SV_Target
{
	float depth = input.pos.z / input.pos.w;
	return float4( (float3)depth, 1.0f );
}

/*----------------------------------------------------------------------------------------------------
	Function
----------------------------------------------------------------------------------------------------*/

